# SPDX-License-Identifier: BSD-2-Clause
# 
# Copyright (c) 2020 NKI/AVL, Netherlands Cancer Institute
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

SHELL := /bin/bash

firstTarget: all

CXX					= @CXX@
CXXFLAGS			= @CXXFLAGS@ @CPPFLAGS@ @BOOST_CPPFLAGS@ @PTHREAD_CFLAGS@
LDFLAGS				= @LDFLAGS@ @BOOST_LDFLAGS@ @PTHREAD_CFLAGS@
LIBS				= -lcif++ \
					  @BOOST_IOSTREAMS_LIB@ \
					  @BOOST_THREAD_LIB@ \
					  @BOOST_REGEX_LIB@ \
					  @BOOST_PROGRAM_OPTIONS_LIB@ \
					  @BOOST_DATE_TIME_LIB@ \
					  -lboost_timer -lboost_chrono \
					  -Wl,-Bstatic -lstdc++ -Wl,-Bdynamic \
					  @LIBS@

prefix				= @prefix@
exec_prefix			= @exec_prefix@
libdir				= @libdir@
includedir			= @includedir@

GNUmakefile: config.status GNUmakefile.in
	$(SHELL) ./config.status

config.status: configure
	$(SHELL) ./config.status --recheck

configure: configure.ac
	autoconf

# main build variables
CXXFLAGS            += -Wall -Wno-multichar

PACKAGES			+= 

ifneq ($(PACKAGES),)
CXXFLAGS			+= $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) pkg-config --cflags $(PACKAGES))
LDFLAGS				+= $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) pkg-config --libs $(PACKAGES) )
endif

LDFLAGS				+= -static-libgcc

# Use the DEBUG flag to build debug versions of the code
DEBUG               = @DEBUG@

VERSION				= @PACKAGE_VERSION@
DEFINES				+= VERSION='"$(VERSION)"'

ifeq "$(DEBUG)" "1"
DEFINES				+= DEBUG
CXXFLAGS            += -g -O0
LDFLAGS				+= -g
else
CXXFLAGS			+= -O2
DEFINES				+= NDEBUG
endif

MRC					= @MRC@
CIFPP_RSRC			= @CIFPP_RSRC@

ifneq "$(MRC)" ""

DEFINES += USE_RSRC
endif

# targets

VPATH += src:test

CXXFLAGS			+= $(DEFINES:%=-D%)

OBJDIR = obj
ifeq "$(DEBUG)" "1"
	OBJDIR	:= $(OBJDIR).dbg
endif

$(OBJDIR):
	mkdir -p $(OBJDIR)

APPLICATION = @PACKAGE_NAME@

OBJECTS = $(APPLICATION:%=$(OBJDIR)/%.o) \
	$(OBJDIR)/pr-main.o

ifneq "$(MRC)" ""
OBJECTS += $(APPLICATION:%=$(OBJDIR)/%_rsrc.o)

$(OBJDIR)/$(APPLICATION)_rsrc.o: $(wildcard $(CIFPP_RSRC)/dictionaries/*) rsrc/version.txt
	$(MRC) -o $@ $(CIFPP_RSRC)/dictionaries rsrc/version.txt
endif

-include $(OBJECTS:%.o=%.d)

$(OBJECTS:.o=.d):

$(OBJDIR)/%.o: %.cpp | $(OBJDIR) GNUmakefile
	@ echo ">>" $<
	@ $(CXX) -MD -c -o $@ $< $(CFLAGS) $(CXXFLAGS)

REVISION = $(shell git log --pretty=format:%h --max-count=1)
REVISION_FILE = version-info-$(REVISION).txt

$(REVISION_FILE): $(OBJDIR) src
	rm -f version-info-*.txt
	git describe --match=build --dirty > $@
	git log --pretty=medium --date=iso8601 -1 >> $@

rsrc:
	@ mkdir -p $@

rsrc/version.txt: $(REVISION_FILE) | rsrc
	cp $? $@

all: $(APPLICATION)
.PHONY: all

$(APPLICATION): %: $(OBJECTS)
	@ echo '->' $@
	@ $(CXX) -o $@ $^ $(LDFLAGS) $(LIBS)

.PHONY: clean
clean:
	rm -rf $(OBJDIR)/* $(APPLICATION)

.PHONY: distclean
distclean: clean
	rm -f config.status config.cache config.log configure.lineno config.status.lineno
	rm -f GNUmakefile

.PHONY: FORCE
FORCE:

.PHONY: test
test:
	echo $(wildcard $(CIFPP_RSRC)/dictionaries/*)
